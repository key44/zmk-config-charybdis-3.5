#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <26>; };

/ {
    combos {
        compatible = "zmk,combos";

        mkp_left {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
        };

        rclk {
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
        };

        mclk {
            bindings = <&mkp MCLK>;
            key-positions = <16 18>;
        };

        mb4 {
            bindings = <&mkp MB4>;
            key-positions = <26 27>;
        };

        mb5 {
            bindings = <&mkp MB5>;
            key-positions = <27 28>;
        };

        scroll {
            bindings = <&mo 1>;
            key-positions = <19 16>;
        };
    };

    behaviors {
        hanzen_space: hanzen_space {
            compatible = "zmk,behavior-tap-dance";
            label = "HANZEN_SPACE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&kp LC(SPACE)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp Q  &kp L  &kp E  &kp COMMA               &kp SEMICOLON  &kp F  &kp W                 &kp R        &kp Y  &kp P
&kp U  &kp I  &kp O  &kp A                   &kp BSPC       &kp H  &kp N                 &kp S        &kp T  &kp K
&kp Z  &kp X  &kp C  &kp V                   &kp PERIOD     &kp B  &kp J                 &kp M        &kp D  &kp G
                     &lt 3 ESC  &lt 1 ENTER  &lt 5 EQUAL           &mt LEFT_SHIFT MINUS  &lt 2 SPACE
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
&kp ASTRK  &kp N7        &kp N8        &kp N9                   &kp ENTER  &trans  &trans     &trans         &trans     &trans
&kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6             &kp MINUS  &trans  &trans     &kp UP         &trans     &trans
&kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3             &kp EQUAL  &trans  &kp LEFT   &kp DOWN       &kp RIGHT  &trans
                                       &kp LC(LA(DEL))  &trans  &trans             &kp LSHFT  &kp LC(SPACE)
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
&bt BT_CLR_ALL  &kp F7  &kp F8  &kp F9              &kp F12  &trans  &kp LPAR       &kp RPAR          &kp GRAVE  &kp DEL
&bt BT_NXT      &kp F4  &kp F5  &kp F6              &kp F11  &trans  &kp LBKT       &kp RBKT          &kp SQT    &kp SLASH
&bt BT_PRV      &kp F1  &kp F2  &kp F3              &kp F10  &trans  &kp LESS_THAN  &kp GREATER_THAN  &trans     &kp BACKSLASH
                                &trans  &kp LSHIFT  &trans           &trans         &trans
            >;
        };

        mouse_layer {
            bindings = <
&kp ESC      &kp LEFT_ALT   &kp DEL    &kp LEFT_SHIFT          &kp LEFT_WIN  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans  &trans
&kp PERCENT  &kp DOLLAR     &kp HASH   &kp AT_SIGN             &kp LCTRL     &rgb_ug RGB_BRI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans  &trans
&kp APOS     &kp AMPERSAND  &kp ASTRK  &kp EXCL                &kp UNDER     &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans  &trans
                                       &trans          &trans  &trans                         &trans           &kp LG(SPACE)
            >;
        };

        zenkaku_num {
            bindings = <
&trans  &kp N7  &kp N8  &kp N9          &trans  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &trans  &trans
&trans  &kp N4  &kp N5  &kp N6          &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans           &trans  &trans
&trans  &kp N1  &kp N2  &kp N3          &trans  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans           &trans  &trans
                        &trans  &trans  &trans                   &trans           &trans
            >;
        };

        ctrLayer {
            bindings = <
&trans     &trans     &kp LC(H)  &kp LC(Y)             &kp LCTRL  &trans  &trans  &trans  &trans  &trans
&kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)             &kp TAB    &trans  &trans  &trans  &trans  &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)             &kp LSHFT  &trans  &trans  &trans  &trans  &trans
                                 &trans     &kp LCTRL  &trans             &trans  &trans
            >;
        };
    };
};
